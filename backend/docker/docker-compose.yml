services:
  db:
    image: postgres:16
    container_name: flashcards_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-flashcards}
      POSTGRES_USER: ${POSTGRES_USER:-flash}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-flash}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-flash} -d ${POSTGRES_DB:-flashcards}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: flashcards_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      db:
        condition: service_healthy

  app:
    # Construimos la imagen desde el backend
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: flashcards_app
    environment:
      # Perfil docker: JDBC -> db:5432 (definido en application-docker.yml)
      SPRING_PROFILES_ACTIVE: docker
      # Secreto JWT (lo coge del .env de esta carpeta)
      APP_JWT_SECRET: ${APP_JWT_SECRET:-change-this-in-.env}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

volumes:
  dbdata:
